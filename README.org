* org-noter-with-emacs-basic-test

A simple setup to test org-noter in a sandbox.


* How to test org-noter in a sandbox

In general, I dont want to break my day-to-day emacs instance. I also want to ensure that the changes I make work apart from my "standard" config.

To do this, I spin up a "clean room" version of vanilla emacs and then install minimum number of packages to run org-noter.


1. Install [[https://github.com/alphapapa/with-emacs.sh][with-emacs.sh]]
2. Clone https://github.com/org-noter/org-noter-with-emacs-basic-test

   #+begin_src bash
     git clone git@github.com:org-noter/org-noter-with-emacs-basic-test.git
   #+end_src

3. Execute =with-emacs.sh= from your =org-noter-with-emacs-basic-test= directory:

   #+begin_src bash :results none
     foo=`find ~/ -name with-emacs.sh -type f -perm -u+x`
     $foo -P -R -d . -- +22:38 install-straight.el
     unset foo
   #+end_src

4. Edit the path to the development clone of org-noter (at cursor point)
#+DOWNLOADED: screenshot @ 2023-05-25 22:37:26
[[file:.figs/How_to_test_org-noter_in_a_sandbox/2023-05-25_22-37-26_screenshot.png]]


5. Evaluate this buffer with =M-x eval-buffer=.



As a result of this, you'll end up with a completely stand-alone instance of Emacs with all necessary packages installed to run a clean version of org-noter.

You can now run your org-noter tests.


* How to reset the sandbox

Remove the =straight= directory and rerun.


* Speed test with Moby Dick

  The files ~speed-test.sh~ and ~speed-test.el~ set up an ~emacs -Q~ session
  with local pdf-tools, org-mode and org-noter installed.

  To use these scripts, have the ~pdf-tools~, ~org-mode~, and ~org-noter~ repos
  at the same directory depth as this repo.  Check out the commits in each repo
  that you want to test, then come back here to run ~speed-test.sh~

  - ~speed-test.sh~
   1. clean and recompile ~pdf-tools~
   2. clean and recompile ~org-mode~
   3. start emacs with ~speed-test.el~ as the init file.

  - ~speed-test.el~
   1. load ~pdf-tools~, ~org-mode~ and ~org-noter~ from the repos
   2. define the timing macro used in the Moby Dick notes
   3. add a hook to =kill-emacs= to delete the ~pdf-tools~ loaded in step 1
   4. start a noter session with Moby Dick.


  You can now run the timing test from the title page of Moby Dick.  You may
  have to navigate to that page first and you may also need to close the
  *Warnings* buffer.
